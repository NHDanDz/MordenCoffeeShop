@model CartItemViewModel
@using DemoApp_Test.Models.ViewModels
@using System.Globalization
<style>
     
    .breadcrumb-option {
        padding: 80px 0;
        position: relative;
        min-height: 200px;
    }

    .breadcrumb__text {
        position: relative;
        z-index: 1;
    }

        .breadcrumb__text h4 {
            color: #ffffff;
            font-size: 36px;
            font-weight: 700;
            margin-bottom: 10px;
        }

    .breadcrumb__links a,
    .breadcrumb__links span {
        color: #ffffff;
        font-size: 16px;
    }

        .breadcrumb__links a:hover {
            color: #e53637;
        }

    /* Thêm overlay để text dễ đọc hơn trên background */
    .breadcrumb-option::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.5);
    }

    .product__cart__item__pic {
        width: 100px; /* Thu nhỏ chiều rộng */
        height: 100px; /* Thu nhỏ chiều cao */
        overflow: hidden; /* Ẩn phần thừa của ảnh */
    }

    .quantity {
        margin-left: -20px; /* Điều chỉnh số này để dịch nhiều hoặc ít hơn */
    }

    .product__cart__item__pic img {
        max-width: 100px;
        max-height: 100px;
        object-fit: cover;
    }

    .product__details {
        width: 25% !important; /* Tăng lên 25% hoặc giá trị bạn mong muốn */
        word-wrap: break-word !important;
    }

    /* Style cho nút tăng giảm số lượng */
    .pro-qty-2 {
        display: flex;
        align-items: center;
        border: 1px solid #ddd;
        border-radius: 10px;
    }

    .quantity-btn {
        padding: 5px 12px;
        background: none;
        border: none;
        cursor: pointer;
        font-size: 16px;
    }

    .quantity-input {
        width: 50px;
        text-align: center;
        border: none;
        padding: 5px;
    }

    .quantity-input::-webkit-inner-spin-button,
    .quantity-input::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
</style>
<!-- Breadcrumb Section Begin -->
<section class="breadcrumb-option" data-setbg="/img/hero/hero-6.jpg">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__text">
                    <h4>Thực đơn</h4>
                    <div class="breadcrumb__links">
                        <a asp-controller="Home" asp-action="Index">Trang Chủ</a>
                        <span>Thực đơn</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Shopping Cart Section Begin -->
<section class="shopping-cart spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                <div class="shopping__cart__table">
                    @if (Model.CartItems.Any())
                    {
                        <table>
                            <thead>
                                <tr>
                                    <th >SẢN PHẨM</th>
                                    <th>CHI TIẾT</th>
                                    <th>SỐ LƯỢNG</th>
                                    <th>TỔNG TIỀN</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.CartItems)
                                {
                                    var discountedPrice = item.Price * (1 - (item.Discount / 100.0));
                                    var totalPrice = discountedPrice * item.Quantity;

                                    <tr data-product-id="@item.Product_id">
                                        <td class="product__cart__item">
                                            <div class="product__cart__item__pic">
                                                <img src="@Url.Content($"~/img/{item.Brand}/{item.TypeCoffee}/{item.Image}")"
                                                     alt="@item.ProductName">
                                            </div>
                                            <div class="product__cart__item__text">
                                                <h6>@item.ProductName</h6>
                                                @if (item.Discount > 0)
                                                {
                                                    <h5>
                                                        ₫@discountedPrice.ToString("#,0").Replace(",", ".")
                                                    </h5>
                                                    <h6 class="text-muted ml-2"><del> ₫@item.Price.ToString("#,0").Replace(",", ".")</del></h6>
                                                }
                                                else
                                                {
                                                    <h5>₫ @item.Price.ToString("#,0").Replace(",", ".")</h5>
                                                }
                                            </div>
                                        </td>
                                        <td class="product__details">
                                             <p><span class="product__details__label">Đá:</span> @item.IceDetail</p>
                                            <p><span class="product__details__label">Đường:</span> @item.SugarDetail</p>
                                        </td>
                                        <td class="quantity__item">
                                            <div class="quantity">
                                                <div class="pro-qty-2">
                                                    <button class="quantity-btn minus"
                                                            data-product-id="@item.Product_id">
                                                        -
                                                    </button>
                                                    <input type="number" value="@item.Quantity"
                                                           min="1" class="quantity-input">
                                                    <button class="quantity-btn plus"
                                                            data-product-id="@item.Product_id">
                                                        +
                                                    </button>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="cart__price">₫@totalPrice.ToString("#,0").Replace(",", ".")</td>
                                        <td class="cart__close">
                                            <i class="fa fa-close remove-item" data-product-id="@item.Product_id"></i>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                        <div class="row">
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                <div class="continue__btn">
                                    <a href="@Url.Action("Menu", "Home")">Tiếp tục mua hàng</a>
                                </div>
                            </div> 
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <h4>Giỏ hàng đang rỗng</h4>
                            <a href="@Url.Action("Menu", "Home")" class="btn btn-primary mt-3">
                                Tiếp tục mua hàng
                            </a>
                        </div>
                    }
                </div>
            </div>
            <div class="col-lg-4">
                <div class="cart__total">
                    <h6>Tổng tiền giỏ hàng</h6>
                    <ul>
                        <li>Tạm tính <span>₫@Model.TongTien.ToString("#,0").Replace(",", ".")</span></li>
                        <li>Tổng tiền <span>₫@Model.TongTien.ToString("#,0").Replace(",", ".")</span></li>
                    </ul>
                    <a href="@Url.Action("Checkout", "Home")" class="primary-btn">
                        Tiến hành thanh toán
                    </a>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Shopping Cart Section End -->

<script>
    $(document).ready(function() {
             function getTotalQuantity() {
            var total = 0;
            $('.quantity-input').each(function() {
                total += parseInt($(this).val()) || 0;
            });
            return total;
        }

        // Hàm kiểm tra và xử lý khi vượt quá tổng số lượng
        function validateTotalQuantity(newQuantity, currentInput) {
            var currentValue = parseInt(currentInput.val()) || 0;
            var totalQuantity = getTotalQuantity() - currentValue + newQuantity;

            if (totalQuantity > 100) {
                alert('Tổng số lượng sản phẩm trong giỏ hàng không được vượt quá 100');
                return false;
            }
            return true;
        } 
        // Validation cho input số lượng
        $('.quantity-input').on('input', function() {
            var $input = $(this);
            var newValue = parseInt($input.val()) || 0;

            // Kiểm tra giá trị hợp lệ
            if (newValue < 1) {
                $input.val(1);
                newValue = 1;
            }

            // Kiểm tra tổng số lượng
            if (!validateTotalQuantity(newValue, $input)) {
                var currentTotal = getTotalQuantity();
                var currentValue = parseInt($input.val()) || 0;
                var maxAllowed = 100 - (currentTotal - currentValue);
                $input.val(maxAllowed);
                newValue = maxAllowed;
            }

            // Cập nhật giỏ hàng
            var productId = $input.closest('.pro-qty-2').find('.quantity-btn').data('product-id');
            updateCartItem(productId, newValue);
        });
        // Xử lý tăng giảm số lượng
        $('.quantity-btn').click(function(e) {
            e.preventDefault();
            var $button = $(this);
            var $row = $button.closest('tr');
            var input = $button.siblings('.quantity-input');
            var currentValue = parseInt(input.val());
            var productId = $button.data('product-id');

            // Kiểm tra giới hạn số lượng
            if ($button.hasClass('plus') && currentValue >= 50) {
                alert('Số lượng sản phẩm không được vượt quá 50');
                return;
            }

            // Lấy giá gốc của sản phẩm
            var basePrice = parseFloat($row.find('.product__cart__item__text h5').text().replace('₫', '').replace('.', '').trim());

            // Tăng hoặc giảm số lượng
            if ($button.hasClass('minus') && currentValue > 1) {
                currentValue -= 1;
            } else if ($button.hasClass('plus') && currentValue < 50) {
                currentValue += 1;
            }

            input.val(currentValue);

            // Cập nhật giá tiền của sản phẩm
            var newTotal = basePrice * currentValue;

            // Định dạng số với dấu chấm
            var formattedTotal = newTotal.toLocaleString('vi-VN');

            $row.find('.cart__price').text('₫' + formattedTotal);

            // Gọi hàm cập nhật giỏ hàng
            updateCartItem(productId, currentValue);
        });

        // Thêm validation cho input số lượng
        $('.quantity-input').on('input', function() {
            var value = parseInt($(this).val());
            if (value > 50) {
                alert('Số lượng sản phẩm không được vượt quá 50');
                $(this).val(50);

                // Trigger cập nhật giỏ hàng
                var productId = $(this).closest('.pro-qty-2').find('.quantity-btn').data('product-id');
                updateCartItem(productId, 50);
            }
        });

        // Thêm thuộc tính max cho input
        $('.quantity-input').attr('max', '50');

       // Xử lý xóa sản phẩm
       $('.remove-item').click(function() {
           var $button = $(this);
           var $row = $button.closest('tr');
           var productId = $button.data('product-id');
            
               $.ajax({
                   url: '@Url.Action("RemoveFromCart", "cart")',
                   type: 'POST',
                   contentType: 'application/json',
                   data: JSON.stringify(productId),
                   success: function(response) {
                       if (response.success) {
                           // Xóa dòng sản phẩm
                           $row.fadeOut(300, function() {
                               $(this).remove();
                               // Kiểm tra nếu giỏ hàng trống
                               if ($('.shopping__cart__table tbody tr').length === 0) {
                                   // Hiển thị thông báo giỏ hàng trống
                                   $('.shopping__cart__table').html(`
                                       <div class="text-center py-5">
                                           <h4>Your cart is empty</h4>
                                           <a href="@Url.Action("Menu", "Home")" class="btn btn-primary mt-3">
                                               Continue Shopping
                                           </a>
                                       </div>
                                   `);
                               }
                               updateTotalPrice();
 
                           });
                       } else {
                           alert('Failed to remove item');
                       }
                   },
                   error: function(xhr, status, error) {
                       console.error('Error:', error);
                       alert('Error removing item');
                   }
               });
           
       });

       function updateCartItem(productId, quantity) {
           $.ajax({
               url: '@Url.Action("UpdateCart", "cart")',
               type: 'POST',
               contentType: 'application/json',
               data: JSON.stringify({ productId: productId, quantity: quantity }),
               success: function(response) {
                   if (response.success) {
                       // Cập nhật tổng tiền
                       updateTotalPrice();
 
                   } else {
                       alert('Failed to update cart');
                   }
               },
               error: function(xhr, status, error) {
                   console.error('Error:', error);
                   alert('Error updating cart');
               }
           });
       }
function updateTotalPrice() {
    // Tính tổng tiền mới
    var total = 0;
    $('.cart__price').each(function() {
        // Lấy giá trị số, loại bỏ ký tự "₫" và dấu chấm
        var price = parseFloat($(this).text().replace('₫', '').replace(/\./g, '').trim());
        total += price;
    });

    // Định dạng tổng tiền với dấu chấm phân cách hàng nghìn
    var formattedTotal = total.toLocaleString('vi-VN');

    // Cập nhật hiển thị tổng tiền trên giao diện
    $('.cart__total ul li span').text('₫' + formattedTotal);
    $('.header__nav__option .price, .offcanvas__nav__option .price').text('₫' + formattedTotal);
}

    });
</script>