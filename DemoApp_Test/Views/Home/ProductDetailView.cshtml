@model DemoApp_Test.Models.HienThiSanPham
@using System.Globalization; 
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<style>
    .breadcrumb-option {
        padding: 80px 0;
        position: relative;
        min-height: 200px;
    }

    .breadcrumb__text {
        position: relative;
        z-index: 1;
    }

        .breadcrumb__text h4 {
            color: #ffffff;
            font-size: 36px;
            font-weight: 700;
            margin-bottom: 10px;
        }

    .breadcrumb__links a,
    .breadcrumb__links span {
        color: #ffffff;
        font-size: 16px;
    }

        .breadcrumb__links a:hover {
            color: #e53637;
        }

    /* Thêm overlay để text dễ đọc hơn trên background */
    .breadcrumb-option::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.5);
    }

    /* Phần Thông tin sản phẩm*/
    .product-description {
        font-family: 'Roboto', sans-serif;
        line-height: 1.6;
        color: #333;
        padding: 20px;
    }

        .product-description h2 {
            font-size: 1.5em;
            color: #53382c;
            margin: 1em 0;
            font-weight: 600;
        }

        .product-description h3 {
            font-size: 1.2em;
            color: #7a4a3c;
            margin: 0.8em 0;
        }

        .product-description p {
            margin-bottom: 1em;
        }

        .product-description ul,
        .product-description ol {
            margin-left: 20px;
            margin-bottom: 1em;
        }

        .product-description li {
            margin-bottom: 0.5em;
        }

        .product-description strong {
            color: #53382c;
            font-weight: 600;
        }

        .product-description em {
            font-style: italic;
        }

        .product-description table {
            width: 100%;
            border-collapse: collapse;
            margin: 1em 0;
        }

        .product-description th,
        .product-description td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

        .product-description th {
            background-color: #f5f5f5;
        }
</style>

<style>
    :root {
        --primary-color: #53382c;
        --hover-color: #7a4a3c; 
        font-family: 'Roboto', 'Open Sans', Arial, sans-serif !important;
        font-weight: bold;
        --font-size: 3rem;
    }

    .product-title {
        text-transform: uppercase;
        color: var(--primary-color);
        font-family: var(--font-family);
        font-weight: 700; /* Đảm bảo chữ in đậm */
        font-size: var(--font-size); /* Điều chỉnh kích thước cho nổi bật hơn */
        letter-spacing: 1.5px; /* Khoảng cách giữa các chữ */
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2); /* Hiệu ứng bóng nhẹ */
        margin-bottom: 25px; /* Khoảng cách dưới tiêu đề */
        text-align: center; /* Canh giữa tiêu đề */
        transition: all 0.3s ease; /* Thêm chuyển đổi mượt mà */
    }

        .product-title:hover {
            color: var(--hover-color);
            text-shadow: 3px 3px 6px rgba(0, 0, 0, 0.3);
            transform: scale(1.05); /* Phóng to nhẹ khi hover */
        }
</style>
 

<section class="breadcrumb-option" data-setbg="/img/hero/hero-9.jpg">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__text">
                    <h4>Thực đơn</h4>
                    <div class="breadcrumb__links">
                        <a asp-controller="Home" asp-action="Index">Trang Chủ</a>
                        <a asp-controller="Home" asp-action="Menu">Thực đơn</a>
                        <span> @Model.Ten_Sanpham</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Shop Details Section Begin -->
<section class="shop-details">
    <div class="product__details__pic">
        <div class="container"> 
            <div class="row">
                <div class="col-lg-3 col-md-3">
                    <ul class="nav nav-tabs" role="tablist">
                        <li class="nav-item">
                            <a class="nav-link active" data-toggle="tab" href="#tabs-1" role="tab">
                                <div class="product__thumb__pic set-bg" data-setbg="@Url.Content($"~/img/{Model.Ten_Nhasanxuat}/{Model.Ten_loai}/{Model.Link1}")">
                                </div>
                            </a>
                        </li>
                    </ul>
                </div>
                <div class="col-lg-6 col-md-9">
                    <div class="tab-content">
                        <div class="tab-pane active" id="tabs-1" role="tabpanel">
                            <div class="product__details__pic__item">
                                <img src="@Url.Content($"~/img/{Model.Ten_Nhasanxuat}/{Model.Ten_loai}/{Model.Link1}")" alt="@Model.Ten_Sanpham">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="product__details__content">
        <div class="container">
            <div class="row d-flex justify-content-center">
                <div class="col-lg-8">
                    <div class="product__details__text">
                        <h1 class="product-title">
                            @Model.Ten_Sanpham
                        </h1>
                        <div class="rating">
                            @{
                                int fullStars = (int)(Model.Rating / 20);
                                bool hasHalfStar = (Model.Rating % 20 >= 10);
                            }

                            @for (int i = 0; i < fullStars; i++)
                            {
                                <i class="fa fa-star"></i>
                            }
                            @if (hasHalfStar)
                            {
                                <i class="fa fa-star-half-o"></i>
                            }
                            @for (int i = fullStars + (hasHalfStar ? 1 : 0); i < 5; i++)
                            {
                                <i class="fa fa-star-o"></i>
                            }
                            <span> @(Model.Rating / 20) | @Model.ReviewCount Lượt đánh giá</span>
                        </div>
                        <div class="price-section">
                            <h3 class="current-price">₫@string.Format(new CultureInfo("vi-VN"), "{0:#,0}", Model.Giagoc - (Model.Giagoc * Model.Discount / 100))</h3>
                            @if (Model.Discount > 0)
                            {
                                <span class="original-price">
                                    <del>₫@string.Format(new CultureInfo("vi-VN"), "{0:#,0}", Model.Giagoc)</del>
                                    <span class="discount-badge">-@Model.Discount%</span>
                                </span>
                            }
                        </div>

                        <div class="product__details__option">
                            <div class="product__details__option__size" hidden>
                                <span>Size:</span>
                                <label for="size-s" class="active">
                                    S
                                    <input type="radio" id="size-s" name="size" value="Size01" checked>
                                </label>
                                <label for="size-m">
                                    M
                                    <input type="radio" id="size-m" name="size" value="Size02">
                                </label>
                                <label for="size-l">
                                    L
                                    <input type="radio" id="size-l" name="size" value="Size03">
                                </label>
                            </div>
                            <div class="product__details__option__ice">
                                <span>Đá:</span>
                                <label for="ice-100" class="active">
                                    50%
                                    <input type="radio" id="ice-100" name="ice" value="Ice01" checked>
                                </label>
                                <label for="ice-70">
                                    30%
                                    <input type="radio" id="ice-70" name="ice" value="Ice02">
                                </label>
                                <label for="ice-50">
                                    20%
                                    <input type="radio" id="ice-50" name="ice" value="Ice03">
                                </label>
                                <label for="ice-30">
                                    10%
                                    <input type="radio" id="ice-30" name="ice" value="Ice04">
                                </label>
                            </div>
                            <div class="product__details__option__sugar">
                                <span>Đường:</span>
                                <label for="sugar-100" class="active">
                                    100%
                                    <input type="radio" id="sugar-100" name="sugar" value="Sugar01" checked>
                                </label>
                                <label for="sugar-70">
                                    70%
                                    <input type="radio" id="sugar-70" name="sugar" value="Sugar02">
                                </label>
                                <label for="sugar-50">
                                    50%
                                    <input type="radio" id="sugar-50" name="sugar" value="Sugar03">
                                </label>
                                <label for="sugar-30">
                                    25%
                                    <input type="radio" id="sugar-30" name="sugar" value="Sugar04">
                                </label>
                            </div>
                        </div>
                        <div class="product__details__cart__option">
                            <div class="quantity-wrapper">
                                <button type="button" class="qty-btn minus">-</button>
                                <input type="text" class="qty-input" value="1" readonly>
                                <button type="button" class="qty-btn plus">+</button>
                            </div>
                            <a href="#" class="primary-btn add-to-cart" data-product-id="@Model.Ma_Sanpham">
                                <i class="fa fa-shopping-cart"></i> Thêm vào giỏ hàng
                            </a>
                        </div>
                        @if (Model.SoldQuantity > 0)
                        {
                            <div class="sold-info">
                                <i class="fa fa-fire"></i> Đã bán: @Model.SoldQuantity
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <div class="product__details__tab">
                        <ul class="nav nav-tabs" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" data-toggle="tab" href="#tabs-5"
                                   role="tab">Mô tả sản phẩm</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" href="#tabs-6" role="tab">
                                    Đánh giá (@Model.ReviewCount)
                                </a>
                            </li>
                        </ul>
                        <div class="tab-content">
                            <div class="tab-pane active" id="tabs-5" role="tabpanel">
                                <div class="product__details__tab__content">
                                    <div class="product__details__tab__content__item">
                                        <h5>Thông tin sản phẩm</h5>
                                        <div class="product-description">
                                            @Html.Raw(Model.Description)
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="tab-pane" id="tabs-6" role="tabpanel">
                                <div class="product__details__tab__content">
                                    @if (User.Identity.IsAuthenticated && ViewBag.HasPurchased)
                                    {
                                        <div class="review-form mb-4">
                                            <h5>Viết đánh giá của bạn</h5>
                                            <form id="feedbackForm">
                                                <input type="hidden" name="productId" value="@Model.Ma_Sanpham" />
                                                <div class="rating-input mb-3">
                                                    <span>Đánh giá của bạn:</span>
                                                    <div class="star-rating">
                                                        @for (int i = 5; i >= 1; i--)
                                                        {
                                                            <input type="radio" id="star@(i)" name="rating" value="@(i*20)" />
                                                            <label for="star@(i)"><i class="fa fa-star"></i></label>
                                                        }
                                                    </div>
                                                </div>
                                                <div class="form-group mb-3">
                                                    <textarea class="form-control" name="comment" rows="4"
                                                              placeholder="Nhập đánh giá của bạn"></textarea>
                                                </div>
                                                <button type="submit" class="primary-btn">Gửi đánh giá</button>
                                            </form>
                                        </div>
                                    }

                                    <div class="reviews-list">
                                        @if (Model.Feedbacks != null && Model.Feedbacks.Any())
                                        {
                                            foreach (var feedback in Model.Feedbacks)
                                            {
                                                <div class="review-item mb-4">
                                                    <div class="review-header d-flex justify-content-between align-items-center">
                                                        <div>
                                                            <h6 class="mb-1">@feedback.ClientName</h6>
                                                            <div class="rating">
                                                                @for (int i = 0; i < 5; i++)
                                                                {
                                                                    if (i < feedback.Rating / 20)
                                                                    {
                                                                        <i class="fa fa-star"></i>
                                                                    }
                                                                    else
                                                                    {
                                                                        <i class="fa fa-star-o"></i>
                                                                    }
                                                                }
                                                            </div>
                                                        </div>
                                                        <small class="text-muted">
                                                            @feedback.CreatedDate.ToString("dd/MM/yyyy HH:mm")
                                                        </small>
                                                    </div>
                                                    <p class="review-comment mt-2">@feedback.Comment</p>
                                                    @if (!string.IsNullOrEmpty(feedback.AdminResponse) && feedback.ResponseTime.HasValue)
                                                    {
                                                        <div class="admin-response mt-3">
                                                            <div class="response-header">
                                                                <strong>Phản hồi từ shop:</strong>
                                                                <small class="text-muted">
                                                                    @feedback.ResponseTime.Value.ToString("dd/MM/yyyy HH:mm")
                                                                </small>
                                                            </div>
                                                            <p class="response-content mt-1">@feedback.AdminResponse</p>
                                                        </div>
                                                    }
                                                </div>
                                            }
                                        }
                                        else
                                        {
                                            <p class="text-center">Chưa có đánh giá nào cho sản phẩm này</p>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <!-- Related Products Section -->
    <div class="related-products my-5">
        <div class="container">
            <!-- Brand Products -->
            <div class="brand-products mb-5">
                <h3 class="text-center mb-4 section-title">Các sản phẩm khác của @Model.Ten_Nhasanxuat</h3>
                <div class="position-relative">
                    <div class="owl-carousel brand-carousel">
                        <!-- Products will be loaded here -->
                    </div>
                    <button class="carousel-nav prev brand-prev">
                        <i class="fa fa-chevron-left"></i>
                    </button>
                    <button class="carousel-nav next brand-next">
                        <i class="fa fa-chevron-right"></i>
                    </button>
                </div>
            </div>

            <!-- Similar Type Products -->
            <div class="similar-products">
                <h3 class="text-center mb-4 section-title">Có thể bạn sẽ thích</h3>
                <div class="position-relative">
                    <div class="owl-carousel type-carousel">
                        <!-- Products will be loaded here -->
                    </div>
                    <button class="carousel-nav prev type-prev">
                        <i class="fa fa-chevron-left"></i>
                    </button>
                    <button class="carousel-nav next type-next">
                        <i class="fa fa-chevron-right"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <style>
        /* Related Products Styles */
        .related-products {
            padding: 40px 0;
            background: #f8f9fa;
        }

        .section-title {
            font-size: 24px;
            color: #53382c;
            font-weight: 700;
            text-transform: uppercase;
            margin-bottom: 30px;
            position: relative;
            padding-bottom: 15px;
        }

            .section-title:after {
                content: '';
                position: absolute;
                bottom: 0;
                left: 50%;
                transform: translateX(-50%);
                width: 60px;
                height: 3px;
                background: #e53637;
            }

        .product-card {
            background: white;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            margin: 10px;
        }

            .product-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 5px 20px rgba(0,0,0,0.15);
            }

        .product-image {
            position: relative;
            padding-top: 100%;
            overflow: hidden;
        }

            .product-image img {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                object-fit: cover;
                transition: transform 0.3s ease;
            }

        .product-card:hover .product-image img {
            transform: scale(1.1);
        }

        .discount-badge {
            position: absolute;
            top: 10px;
            right: 10px;
            background: #e53637;
            color: white;
            padding: 5px 10px;
            border-radius: 4px;
            font-weight: 600;
        }

        .product-info {
            padding: 15px;
        }

        .product-name {
            font-size: 16px;
            font-weight: 600;
            color: #333;
            margin-bottom: 10px;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            height: 44px;
        }

        .product-rating {
            margin-bottom: 10px;
        }

        .rating-stars {
            color: #ffd700;
            margin-right: 5px;
        }

        .review-count {
            color: #666;
            font-size: 14px;
        }

        .product-price {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .current-price {
            font-size: 18px;
            font-weight: 700;
            color: #e53637;
        }

        .original-price {
            font-size: 14px;
            color: #999;
            text-decoration: line-through;
        }

        .carousel-nav {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            width: 40px;
            height: 40px;
            background: white;
            border: none;
            border-radius: 50%;
            box-shadow: 0 2px 5px rgba(0,0,0,0.2);
            z-index: 2;
            cursor: pointer;
            transition: all 0.3s ease;
        }

            .carousel-nav:hover {
                background: #e53637;
                color: white;
            }

            .carousel-nav.prev {
                left: -20px;
            }

            .carousel-nav.next {
                right: -20px;
            }

        .owl-carousel .owl-item {
            padding: 10px;
        }
         
    </style>

    <script>
         $(document).ready(function() {
            // Initialize Owl Carousel
            function initCarousel(selector, prevBtn, nextBtn) {
                return $(selector).owlCarousel({
                    loop: true,
                    margin: 20,
                    nav: false,
                    dots: false,
                    autoplay: true,
                    autoplayTimeout: 5000,
                    autoplayHoverPause: true,
                    responsive: {
                        0: { items: 1 },
                        576: { items: 2 },
                        768: { items: 3 },
                        992: { items: 4 }
                    }
                });
            }

            // Load related products
            $.ajax({
                url: '/Home/GetRelatedProducts',
                type: 'GET',
                data: {
                    productId: '@Model.Ma_Sanpham',
                    limit: 10
                },
                success: function(response) {
                    if (response.success) {
                        // Render brand products
                        let brandHtml = response.brandProducts.map(product => createProductCard(product)).join('');
                        $('.brand-carousel').html(brandHtml);

                        // Render type products
                        let typeHtml = response.typeProducts.map(product => createProductCard(product)).join('');
                        $('.type-carousel').html(typeHtml);

                        // Initialize carousels after content is loaded
                        let brandCarousel = initCarousel('.brand-carousel', '.brand-prev', '.brand-next');
                        let typeCarousel = initCarousel('.type-carousel', '.type-prev', '.type-next');

                        // Navigation buttons
                        $('.brand-prev').click(() => brandCarousel.trigger('prev.owl.carousel'));
                        $('.brand-next').click(() => brandCarousel.trigger('next.owl.carousel'));
                        $('.type-prev').click(() => typeCarousel.trigger('prev.owl.carousel'));
                        $('.type-next').click(() => typeCarousel.trigger('next.owl.carousel'));

                        // Add click event handler to product cards
                        $('.product-card').click(function() {
                            const productId = $(this).find('.product-id').text();
                            window.location.href = `/Home/ProductDetailView/${productId}`;
                        });
                    }
                }
            });

            // Create product card HTML
            function createProductCard(product) {
                const discountedPrice = product.price * (1 - product.discount/100);
                const stars = Array(5).fill().map((_, i) =>
                    `<i class="fa fa-${i < product.rating/20 ? 'star' : 'star-o'}"></i>`
                ).join('');

                return `
                    <div class="product-card" style="cursor: pointer;">
                        <div class="product-image">
                            <img src="/img/${product.brandName}/${product.typeName}/${product.image}" alt="${product.name}">
                            ${product.discount > 0 ?
                                `<div class="discount-badge">-${product.discount}%</div>` :
                                ''}
                        </div>
                        <div class="product-info">
                            <h4 class="product-id" style="display: none;">${product.id}</h4>
                            <h4 class="product-name">${product.name}</h4>
                            <div class="product-rating">
                                <span class="rating-stars">${stars}</span>
                                <span class="review-count">(${product.reviewCount})</span>
                            </div>
                            <div class="product-price">
                                <span class="current-price">₫${discountedPrice.toLocaleString('vi-VN')}</span>
                                ${product.discount > 0 ?
                                    `<span class="original-price">₫${product.price.toLocaleString('vi-VN')}</span>` :
                                    ''}
                            </div>
                        </div>
                    </div>
                `;
            }
        });
         
    </script>
</section>

<!-- Toast Notification -->
<div id="toast" class="toast"></div>

<script>
                // Hàm hiển thị toast notification
            function showToast(message, type = 'success') {
                const toast = $('#toast');
                toast.text(message);
                toast.removeClass('success error').addClass(type + ' show');

                setTimeout(function() {
                    toast.removeClass('show');
                }, 3000);
            }
    $(document).ready(function() {
    $('#feedbackForm').on('submit', function(e) {
        e.preventDefault();
        
        var formData = {
            productId: $('input[name="productId"]').val(),
            rating: $('input[name="rating"]:checked').val(),
            comment: $('textarea[name="comment"]').val()
        };

        if (!formData.rating) {
            showToast('Vui lòng chọn số sao đánh giá', 'error');
            return;
        }

        $.ajax({
            url: '/Home/SubmitFeedback',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(formData),
            success: function(response) {
                if (response.success) {
                    showToast('Gửi đánh giá thành công');
                    setTimeout(function() {
                        location.reload();
                    }, 1500);
                } else {
                    showToast(response.message || 'Có lỗi xảy ra', 'error');
                }
            },
            error: function() {
                showToast('Có lỗi xảy ra khi gửi đánh giá', 'error');
            }
        });
    });
});
</script>

<style>
    .review-form {
        padding: 20px;
        background: #f8f9fa;
        border-radius: 8px;
    }

    .star-rating {
        display: flex;
        flex-direction: row-reverse;
        gap: 5px;
    }

        .star-rating input {
            display: none;
        }

        .star-rating label {
            cursor: pointer;
            color: #ddd;
            font-size: 24px;
        }

            .star-rating input:checked ~ label,
            .star-rating label:hover,
            .star-rating label:hover ~ label {
                color: #ffd700;
            }

    .review-item {
        padding: 15px;
        border-bottom: 1px solid #eee;
    }

        .review-item:last-child {
            border-bottom: none;
        }

    .admin-response {
        background: #f8f9fa;
        padding: 15px;
        border-radius: 4px;
        margin-left: 20px;
    }

    .review-header .rating {
        font-size: 14px;
    }

        .review-header .rating i {
            color: #ffd700;
        }
    .product__details__breadcrumb {
        padding: 20px 0;
        border-bottom: 1px solid #e5e5e5;
        margin-bottom: 30px;
    }

        .product__details__breadcrumb a {
            color: #333;
            margin-right: 10px;
            text-decoration: none;
        }

        .product__details__breadcrumb span {
            color: #e53637;
        }

    .product__details__pic__item {
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }

        .product__details__pic__item img {
            width: 100%;
            height: auto;
            transition: transform 0.3s ease;
        }

            .product__details__pic__item img:hover {
                transform: scale(1.05);
            }

    .rating i {
        color: #ffd700;
        margin-right: 2px;
    }

    .price-section {
        margin: 20px 0;
        display: flex;
        align-items: center; /* Căn giữa theo chiều dọc */
        justify-content: center; /* Căn giữa theo chiều ngang */
        gap: 15px;
        text-align: center;
        width: 100%; /* Đảm bảo chiều rộng 100% */
    }

    .current-price {
        color: #e53637;
        font-size: 24px;
        font-weight: bold;
        margin: 0; /* Reset margin để tránh spacing không mong muốn */
    }

    .original-price {
        display: flex;
        align-items: center;
        color: #888;
        font-size: 18px;
    }

    .discount-badge {
        background-color: #e53637;
        color: white;
        padding: 2px 8px;
        border-radius: 4px;
        font-size: 14px;
        margin-left: 8px;
    }

    .product__details__option {
        margin: 30px 0;
    }

    .product__details__option__size,
    .product__details__option__ice,
    .product__details__option__sugar {
        margin-bottom: 20px;
    }

    .product__details__option label {
        cursor: pointer;
        padding: 8px 15px;
        border-radius: 4px;
        border: 1px solid #ddd;
        margin-right: 8px;
        transition: all 0.3s ease;
    }

        .product__details__option label.active {
            background-color: #e53637;
            color: white;
            border-color: #e53637;
        }

    .product__details__option input[type="radio"] {
        display: none;
    }

    .product__details__cart__option {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 20px;
        margin: 30px 0;
    }

    .quantity-wrapper {
        display: flex;
        align-items: center;
        border: 1px solid #ddd;
        border-radius: 4px;
        overflow: hidden;
    }

    .qty-btn {
        width: 40px;
        height: 40px;
        border: none;
        background: #f5f5f5;
        cursor: pointer;
        font-size: 18px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s;
    }

        .qty-btn:hover {
            background: #e0e0e0;
        }

    .qty-input {
        width: 50px;
        height: 40px;
        border: none;
        border-left: 1px solid #ddd;
        border-right: 1px solid #ddd;
        text-align: center;
        font-size: 16px;
        background: white;
    }

        .qty-input:focus {
            outline: none;
        }

    .primary-btn {
        height: 40px;
        padding: 0 30px;
        background: #e53637;
        color: white;
        border-radius: 4px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s;
    }

    .sold-info {
        margin-top: 15px;
        color: #666;
    }

        .sold-info i {
            color: #e53637;
            margin-right: 5px;
        }

    .toast {
        position: fixed;
        top: 20px;
        right: 20px;
        padding: 15px 25px;
        background: #333;
        color: white;
        border-radius: 4px;
        display: none;
        z-index: 1000;
    }

        .toast.show {
            display: block;
            animation: fadeIn 0.3s, fadeOut 0.3s 2.7s;
        }

    
    to {
        opacity: 0;
        transform: translateY(-20px);
    }
    /* Thêm vào phần style */

    /* Animation cho các section */
    .animate__animated {
        animation-duration: 1s;
        animation-fill-mode: both;
    }

    .animate__fadeIn {
        animation-name: fadeIn;
    }

    /* Nút thêm vào giỏ hàng hover effect */
    .primary-btn {
        position: relative;
        overflow: hidden;
    }

        .primary-btn:after {
            content: '';
            position: absolute;
            width: 0;
            height: 100%;
            top: 0;
            left: 0;
            background: rgba(255,255,255,0.2);
            transition: width 0.3s ease;
        }

        .primary-btn:hover:after {
            width: 100%;
        }

    /* Toast notification styles */
    .toast.success {
        background: #4caf50;
    }

    .toast.error {
        background: #f44336;
    }

    /* Hiệu ứng ripple cho các nút */
    .ripple {
        position: relative;
        overflow: hidden;
    }

        .ripple:after {
            content: "";
            display: block;
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            pointer-events: none;
            background-image: radial-gradient(circle, #fff 10%, transparent 10.01%);
            background-repeat: no-repeat;
            background-position: 50%;
            transform: scale(10, 10);
            opacity: 0;
            transition: transform .5s, opacity 1s;
        }

        .ripple:active:after {
            transform: scale(0, 0);
            opacity: .3;
            transition: 0s;
        }
         
</style>

<script>
    $(document).ready(function() {
        // Xử lý chọn options
        $('.product__details__option label').click(function() {
            $(this).siblings().removeClass('active');
            $(this).addClass('active');
            $(this).find('input[type="radio"]').prop('checked', true);
        });

        // Xử lý tăng giảm số lượng
        $('.qtybtn').click(function() {
            var $button = $(this);
            var oldValue = parseInt($('#quantity').val());

            if ($button.hasClass('inc')) {
                var newVal = oldValue + 1;
            } else {
                var newVal = oldValue > 1 ? oldValue - 1 : 1;
            }

            $('#quantity').val(newVal);
        });

        // Xử lý thêm vào giỏ hàng
          // Xử lý thêm vào giỏ hàng
    $('.add-to-cart').click(function(e) {
        e.preventDefault();
        var productId = $(this).data('product-id');
        var quantity = parseInt($('.qty-input').val());
        var sizeId = $('input[name="size"]:checked').val();
        var iceId = $('input[name="ice"]:checked').val();
        var sugarId = $('input[name="sugar"]:checked').val();

        var requestData = {
            productId: productId,
            quantity: quantity,
            sizeId: sizeId,
            iceId: iceId,
            sugarId: sugarId
        };

        $.ajax({
            url: '/cart/AddToCartWithOptions',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(requestData),
            success: function(response) {
                if (response.success) {
                    showToast('Thêm vào giỏ hàng thành công');

                    // Cập nhật số lượng giỏ hàng trên header
                    if (response.totalItems) {
                        $('.cart-count').text(response.totalItems);
                    }

                    // Hiệu ứng nút thêm vào giỏ hàng
                    var $button = $('.add-to-cart');
                    $button.html('<i class="fa fa-check"></i> Đã thêm vào giỏ');
                    setTimeout(function() {
                        $button.html('<i class="fa fa-shopping-cart"></i> Thêm vào giỏ hàng');
                    }, 2000);
                } else {
                    showToast(response.message || 'Có lỗi xảy ra', 'error');
                }
            },
            error: function(xhr, status, error) {
                showToast('Có lỗi xảy ra khi thêm vào giỏ hàng', 'error');
            }
        });
    });

 

        // Xử lý hình ảnh set-bg
        $('.set-bg').each(function() {
            var bg = $(this).data('setbg');
            $(this).css('background-image', 'url(' + bg + ')');
        });

        // Validate số lượng input
        $('#quantity').on('input', function() {
            var value = $(this).val();
            if (value < 1) $(this).val(1);
            if (value > 99) $(this).val(99);
        });

        // Thêm smooth scroll cho tabs
        $('.nav-tabs a').click(function(e) {
            e.preventDefault();
            $(this).tab('show');
            var targetTab = $(this).attr('href');
            $('html, body').animate({
                scrollTop: $(targetTab).offset().top - 100
            }, 500);
        });

        // Cập nhật giá khi chọn size
        $('input[name="size"]').change(function() {
            var sizeId = $(this).val();
            var productId = $('.add-to-cart').data('product-id');

            $.ajax({
                url: '/Home/GetUpdatedPrice',
                type: 'GET',
                data: {
                    productId: productId,
                    sizeId: sizeId
                },
                success: function(response) {
                    if (response.success) {
                        // Cập nhật giá hiển thị
                        $('.current-price').text('₫' + response.price.toLocaleString('vi-VN'));
                        if (response.originalPrice) {
                            $('.original-price del').text('₫' + response.originalPrice.toLocaleString('vi-VN'));
                        }
                    }
                }
            });
        });
    });

    // Xử lý zoom ảnh
    $(document).ready(function(){
        $('.product__details__pic__item').zoom({
            magnify: 1.5
        });
    });

    // Thêm animation khi scroll đến các section
    $(window).scroll(function() {
        $('.product__details__tab__content__item').each(function() {
            if ($(this).isInViewport()) {
                $(this).addClass('animate__animated animate__fadeIn');
            }
        });
    });

    // Helper function kiểm tra element có trong viewport không
    $.fn.isInViewport = function() {
        var elementTop = $(this).offset().top;
        var elementBottom = elementTop + $(this).outerHeight();
        var viewportTop = $(window).scrollTop();
        var viewportBottom = viewportTop + $(window).height();
        return elementBottom > viewportTop && elementTop < viewportBottom;
    };
        $(document).ready(function() {
        // Xử lý tăng giảm số lượng
        $('.qtybtn').on('click', function() {
            var $button = $(this);
            var $input = $('#quantity');
            var oldValue = parseInt($input.val());

            if ($button.hasClass('inc')) {
                var newVal = oldValue + 1;
                if (newVal > 99) newVal = 99;
            } else {
                var newVal = oldValue - 1;
                if (newVal < 1) newVal = 1;
            }

            $input.val(newVal);
        });
             $(document).ready(function() {
        let $input = $('.qty-input');

        // Xử lý nút tăng giảm
        $('.qty-btn').click(function() {
            let currentValue = parseInt($input.val());
            if ($(this).hasClass('plus')) {
                if (currentValue < 99) $input.val(currentValue + 1);
            } else {
                if (currentValue > 1) $input.val(currentValue - 1);
            }
        });

        // Validate input
        $input.on('input', function() {
            let value = parseInt($(this).val().replace(/[^0-9]/g, ''));
            if (isNaN(value)) value = 1;
            if (value < 1) value = 1;
            if (value > 99) value = 99;
            $(this).val(value);
        });
    });
    });
        // Thêm hàm isInViewport
    $.fn.isInViewport = function() {
        var elementTop = $(this).offset().top;
        var elementBottom = elementTop + $(this).outerHeight();
        var viewportTop = $(window).scrollTop();
        var viewportBottom = viewportTop + $(window).height();
        return elementBottom > viewportTop && elementTop < viewportBottom;
    };
</script>
