@{
    ViewData["Title"] = "Dashboard";
    Layout = "../Shared/_Layout.cshtml";
}
<style>
    .visitor-stats {
        display: flex;
        gap: 20px;
        padding: 15px;
        margin-bottom: 20px;
    }

    .stat-card {
        flex: 1;
        background: white;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        border: 1px solid #e5e7eb;
        transition: transform 0.2s;
    }

        .stat-card:hover {
            transform: translateY(-2px);
        }

    .stat-content {
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .stat-icon {
        padding: 12px; 
        border-radius: 0%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .total-visitors .stat-icon {
        background-color: rgba(59, 130, 246, 0.1);
        color: #3b82f6;
    }

    .online-users .stat-icon {
        background-color: rgba(34, 197, 94, 0.1);
        color: #22c55e;
    }

    .stat-info h4 {
        color: #6b7280;
        font-size: 0.875rem;
        margin: 0 0 5px 0;
        font-weight: 500;
    }

    .stat-info p {
        color: #111827;
        font-size: 1.5rem;
        font-weight: 600;
        margin: 0;
    }

    .stat-card i {
        font-size: 1.5rem;
    }
</style>

<div class="visitor-stats">
    <div class="stat-card total-visitors">
        <div class="stat-content">
            <div class="stat-icon">
                <i class="mdi mdi-account-multiple"></i>
            </div>
            <div class="stat-info">
                <h4>Tổng Số Truy Cập</h4>
                <p>@ViewBag.TotalVisitors.ToString("N0")</p>
            </div>
        </div>
    </div>

    <div class="stat-card online-users">
        <div class="stat-content">
            <div class="stat-icon">
                <i class="mdi mdi-account-check"></i>
            </div>
            <div class="stat-info">
                <h4>Số Người Hoạt Động</h4>
                <p>@ViewBag.OnlineUsers.ToString("N0")</p>
            </div>
        </div>
    </div>
</div>
 
<!-- Key Metrics Section -->
<div class="row">
    <!-- Revenue Card -->
    <div class="col-md-3 stretch-card grid-margin">
        <div class="card bg-gradient-success card-img-holder text-white">
            <div class="card-body">
                <img src="~/Admin/assets/images/dashboard/circle.svg" class="card-img-absolute" alt="circle-image" />
                <h4 class="font-weight-normal mb-3">
                    Tổng doanh thu <i class="mdi mdi-cash-multiple mdi-24px float-end"></i>
                </h4>
                <h2 class="mb-5">₫@ViewBag.TotalRevenue.ToString("#,0").Replace(",", ".")</h2>
                <h6 class="card-text">Doanh thu tháng: ₫@ViewBag.MonthlyRevenue.ToString("#,0").Replace(",", ".")</h6>
            </div>
        </div>
    </div>
    <!-- Orders Card -->
    <div class="col-md-3 stretch-card grid-margin">
        <div class="card bg-gradient-info card-img-holder text-white">
            <div class="card-body">
                <img src="~/Admin/assets/images/dashboard/circle.svg" class="card-img-absolute" alt="circle-image" />
                <h4 class="font-weight-normal mb-3">
                    Tổng số đơn hàng <i class="mdi mdi-shopping mdi-24px float-end"></i>
                </h4>
                <h2 class="mb-5">@ViewBag.TotalOrders.ToString("N0")</h2>
                <h6 class="card-text">Chưa duyệt: @ViewBag.PendingOrders</h6>
            </div>
        </div>
    </div>
    <!-- Products Card -->
    <div class="col-md-3 stretch-card grid-margin">
        <div class="card bg-gradient-primary card-img-holder text-white">
            <div class="card-body">
                <img src="~/Admin/assets/images/dashboard/circle.svg" class="card-img-absolute" alt="circle-image" />
                <h4 class="font-weight-normal mb-3">
                    Sản phẩm đang bán <i class="mdi mdi-package-variant mdi-24px float-end"></i>
                </h4>
                <h2 class="mb-5">@ViewBag.ActiveProducts</h2>
                <h6 class="card-text">Tổng sản phẩm: @ViewBag.TotalProducts</h6>
            </div>
        </div>
    </div>
    <!-- Average Order Value Card -->
    <div class="col-md-3 stretch-card grid-margin">
        <div class="card bg-gradient-warning card-img-holder text-white">
            <div class="card-body">
                <img src="~/Admin/assets/images/dashboard/circle.svg" class="card-img-absolute" alt="circle-image" />
                <h4 class="font-weight-normal mb-3">
                    Giá trị đơn hàng trung bình <i class="mdi mdi-chart-line mdi-24px float-end"></i>
                </h4>
                <h2 class="mb-5">₫@ViewBag.AverageOrderValue.ToString("#,0").Replace(",", ".")</h2>
                <h6 class="card-text">Cao nhất: ₫@ViewBag.HighestOrderValue.ToString("#,0").Replace(",", ".")</h6>
            </div>
        </div>
    </div>
</div>

<!-- Orders Analysis Section -->
<div class="row">
    <!-- Revenue Trend Chart -->
    <div class="col-lg-7 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Xu hướng doanh thu và đơn hàng</h4>
                <div class="d-flex flex-row justify-content-between">
                    <p class="text-muted mb-1" style="font-family: 'Roboto', 'Open Sans', Arial, sans-serif !important; font-weight: bold;">Xu hướng doanh thu trong 7 tháng qua</p>
                    <p class="text-muted mb-1">
                        <span class="text-success me-1"><i class="mdi mdi-arrow-up"></i>@ViewBag.RevenueGrowth%</span>
                    </p>
                </div>
                <canvas id="revenueChart"></canvas>
            </div>
        </div>
    </div>
    <!-- Payment Methods Chart -->
    <div class="col-lg-5 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title" style="font-family: 'Roboto', 'Open Sans', Arial, sans-serif !important; font-weight: bold;">
                    Phương thức thanh toán
                </h4>
                <canvas id="paymentMethodsChart"></canvas>
                <div class="mt-4">
                    <div class="d-flex justify-content-between">
                        <p class="text-muted">Đơn hàng đã hoàn thành</p>
                        <p>@ViewBag.PaidOrdersCount (@ViewBag.PaidOrdersPercentage%)</p>
                    </div>
                    <div class="d-flex justify-content-between">
                        <p class="text-muted">Đang chờ vận chuyển</p>
                        <p>@ViewBag.UnpaidOrdersCount (@ViewBag.UnpaidOrdersPercentage%)</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Recent Orders Table -->
<div class="row">
    <div class="col-12 grid-margin">
        <div class="card">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h4 class="card-title" style="font-family: 'Roboto', 'Open Sans', Arial, sans-serif !important; font-weight: bold;">Đơn hàng gần đây</h4>
                    <a href="@Url.Action("OrderView", "Admin")" class="btn btn-primary btn-sm" style="font-family: 'Roboto', 'Open Sans', Arial, sans-serif !important; font-weight: bold;">Xem tất cả đơn hàng</a>
                </div>
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr style = "text-align: center !important">
                                <th style="font-family: 'Roboto', 'Open Sans', Arial, sans-serif !important; font-weight: bold;">ID Đơn hàng</th>
                                <th style="font-family: 'Roboto', 'Open Sans', Arial, sans-serif !important; font-weight: bold;">Khách hàng</th>
                                <th style="font-family: 'Roboto', 'Open Sans', Arial, sans-serif !important; font-weight: bold;">Ngày đặt</th>
                                <th style="font-family: 'Roboto', 'Open Sans', Arial, sans-serif !important; font-weight: bold;">Tổng giá trị</th>
                                <th style="font-family: 'Roboto', 'Open Sans', Arial, sans-serif !important; font-weight: bold;">Phương thức thanh toán</th>
                                <th style="font-family: 'Roboto', 'Open Sans', Arial, sans-serif !important; font-weight: bold;">Trạng thái</th>
                                <th style="font-family: 'Roboto', 'Open Sans', Arial, sans-serif !important; font-weight: bold;">Tình trạng thanh toán</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in ViewBag.RecentOrders)
                            {
                                <tr>
                                    <td style="text-align: center !important"><a href="#" class="text-primary">@order.Bill_id</a></td>
                                    <td style="text-align: center !important">@order.Client?.Name</td>
                                    <td style="text-align: center !important">@order.Date.ToString("MMM dd, yyyy HH:mm")</td>
                                    <td class="text-right" style="padding-left: 50px !important">₫@order.Total.ToString("#,0").Replace(",", ".")</td>
                                    <td style="text-align: center !important">@order.PaymentMethod</td>
                                    <td style="text-align: center !important">
                                        @if (order.Status)
                                        {
                                            <label class="badge badge-gradient-success"> Đã xác nhận </label>
                                        }
                                        else
                                        {
                                            <label class="badge badge-gradient-warning">Chờ xác nhận</label>
                                        }
                                    </td>
                                    <td style="text-align: center !important">
                                        @if (order.PaymentStatus)
                                        {
                                            <label class="badge badge-gradient-success">Hoàn thành</label>
                                        }
                                        else
                                        {
                                            <label class="badge badge-gradient-danger">Đang vận chuyển</label>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Product Analytics Section -->
<div class="row">
    <!-- Products by Brand -->
    <div class="col-md-6 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title" style="font-family: 'Roboto', 'Open Sans', Arial, sans-serif !important; font-weight: bold;">Sản phẩm theo nhãn hàng</h4>
                <canvas id="brandDistributionChart"></canvas>
            </div>
        </div>
    </div>
    <!-- Product Categories -->
    <div class="col-md-6 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Product Categories</h4>
                <canvas id="categoryDistributionChart"></canvas>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Initialize charts when document is ready
        document.addEventListener('DOMContentLoaded', function() {
            // Brand Distribution Chart
            new Chart(document.getElementById('brandDistributionChart'), {
                type: 'bar',
                data: {
                    labels: @Html.Raw(Json.Serialize(ViewBag.BrandLabels)),
                    datasets: [{
                        label: 'Số lượng sản phẩm',
                        data: @Html.Raw(Json.Serialize(ViewBag.BrandData)),
                        backgroundColor: 'rgba(75, 192, 192, 0.5)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            // Type Distribution Chart
            new Chart(document.getElementById('typeDistributionChart'), {
                type: 'doughnut',
                data: {
                    labels: @Html.Raw(Json.Serialize(ViewBag.TypeLabels)),
                    datasets: [{
                        data: @Html.Raw(Json.Serialize(ViewBag.TypeData)),
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.5)',
                            'rgba(54, 162, 235, 0.5)',
                            'rgba(255, 206, 86, 0.5)',
                            'rgba(75, 192, 192, 0.5)'
                        ],
                        borderColor: [
                            'rgba(255, 99, 132, 1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                }
            });

            // Status Chart
            new Chart(document.getElementById('statusChart'), {
                type: 'pie',
                data: {
                    labels: ['Active', 'Archived'],
                    datasets: [{
                        data: [@ViewBag.ActiveProducts, @ViewBag.ArchivedProducts],
                        backgroundColor: [
                            'rgba(75, 192, 192, 0.5)',
                            'rgba(255, 99, 132, 0.5)'
                        ],
                        borderColor: [
                            'rgba(75, 192, 192, 1)',
                            'rgba(255, 99, 132, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                }
            });
        });
           const revenueChartCtx = document.getElementById('revenueChart');
        if (revenueChartCtx) {
            new Chart(revenueChartCtx, {
                type: 'line',
                data: {
                    labels: @Html.Raw(Json.Serialize(ViewBag.RevenueDates)),
                    datasets: [{
                        label: 'Doanh thu (₫)',
                        data: @Html.Raw(Json.Serialize(ViewBag.RevenueData)),
                        borderColor: '#4CAF50',
                        backgroundColor: 'rgba(76, 175, 80, 0.1)',
                        borderWidth: 2,
                        fill: true,
                        tension: 0.4,
                        yAxisID: 'y'
                    }, {
                        label: 'Đơn hàng',
                        data: @Html.Raw(Json.Serialize(ViewBag.OrdersData)),
                        borderColor: '#2196F3',
                        backgroundColor: 'rgba(33, 150, 243, 0.1)',
                        borderWidth: 2,
                        fill: true,
                        tension: 0.4,
                        yAxisID: 'y1'
                    }]
                },
                options: {
                    responsive: true,
                    interaction: {
                        mode: 'index',
                        intersect: false,
                    },
                    scales: {
                        x: {
                            grid: {
                                display: false
                            }
                        },
                        y: {
                            type: 'linear',
                            display: true,
                            position: 'left',
                            title: {
                                display: true,
                                text: 'Doanh thu (₫)'
                            },
                            beginAtZero: true
                        },
                        y1: {
                            type: 'linear',
                            display: true,
                            position: 'right',
                            title: {
                                display: true,
                                text: 'Tổng đơn hàng'
                            },
                            beginAtZero: true,
                            grid: {
                                drawOnChartArea: false
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: true,
                            position: 'top'
                        },
                        tooltip: {
                            mode: 'index',
                            intersect: false
                        }
                    }
                }
            });
        }
        new Chart(document.getElementById('paymentMethodsChart'), {
            type: 'pie',  // Changed to pie chart from doughnut
            data: {
                labels: @Html.Raw(Json.Serialize(ViewBag.PaymentMethods)),
                datasets: [{
                    data: @Html.Raw(Json.Serialize(ViewBag.PaymentMethodCounts)),
                    backgroundColor: [
                        'rgb(54, 162, 235)',  // Blue
                        'rgb(75, 192, 192)',  // Green
                        'rgb(255, 205, 86)'   // Yellow
                    ]
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom'
                    },
                    title: {
                        display: true,
                                text: 'Phân bố phương thức thanh toán'
                    }
                }
            }
        });
    </script>
}